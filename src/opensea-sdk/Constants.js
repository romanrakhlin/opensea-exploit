// Interaction OpenSea
export const OPENSEA_URL = `https://api.opensea.io/api/v1/`;
export const REF_ADDRESS = `0xd71b8a3ea94df47e766db98a35eba3a5195f4b98`;
export const X_API_KEY = "2f6f419a083c46de9d83ce3dbe7db601";

// *******
export const ACTIVITY_POLLING_INTERVAL = 60000; // 1 min
export const LISTING_POLLING_INTERVAL = 300000; // 5 mins
export const OFFERS_POLLING_INTERVAL = 120000; // 2 mins

// For All Function!!!
export const MIN_EXPIRATION_SECONDS = 10;
export const ORDER_MATCHING_LATENCY_SECONDS = 60 * 60 * 24 * 7;
export const OPENSEA_FEE_RECIPIENT = "0x5b3256965e7c3cf26e11fcaf296dfc8807c01073";
export const NULL_BLOCK_HASH = "0x0000000000000000000000000000000000000000000000000000000000000000";
export const INVERSE_BASIS_POINT = 10000;
export const DEFAULT_BUYER_FEE_BASIS_POINTS = 0;
export const DEFAULT_SELLER_FEE_BASIS_POINTS = 250;
export const OPENSEA_SELLER_BOUNTY_BASIS_POINTS = 250; // default 1 % we are using 2.5%
export const DEFAULT_MAX_BOUNTY = DEFAULT_SELLER_FEE_BASIS_POINTS;
export const STATIC_CALL_TX_ORIGIN_ADDRESS = "0xbff6ade67e3717101dd8d0a7f3de1bf6623a2ba8";
export const MERKLE_VALIDATOR_MAINNET = "0xbaf2127b49fc93cbca6269fade0f7f31df4c88a7";

// For Wyvern
export const mainnetWyvernConfigByNetwork = {
    wyvernExchangeContractAddress: "0x7be8076f4ea4a4ad08075c2508e481d6c946d12b",
    wyvernProxyRegistryContractAddress: "0xa5409ec958c83c3f309868babaca7c86dcb077c1",
    wyvernTokenTransferProxyContractAddress: "0xe5c783ee536cf5e63e792988335c4255169be4e1"
};

// For EIP712
export const OrderTypesEIP712 = {
    EIP712Domain: [
        { name: "name", type: "string" },
        { name: "version", type: "string" },
        { name: "chainId", type: "uint256" },
        { name: "verifyingContract", type: "address" }
    ],
    Order: [
        { name: "maker", type: "address" },
        { name: "exchange", type: "address" },
        { name: "taker", type: "address" },
        { name: "makerRelayerFee", type: "uint256" },
        { name: "takerRelayerFee", type: "uint256" },
        { name: "makerProtocolFee", type: "uint256" },
        { name: "takerProtocolFee", type: "uint256" },
        { name: "feeRecipient", type: "address" },
        { name: "feeMethod", type: "uint8" },
        { name: "side", type: "uint8" },
        { name: "saleKind", type: "uint8" },
        { name: "target", type: "address" },
        { name: "howToCall", type: "uint8" },
        { name: "calldata", type: "bytes" },
        { name: "replacementPattern", type: "bytes" },
        { name: "staticTarget", type: "address" },
        { name: "staticExtradata", type: "bytes" },
        { name: "paymentToken", type: "address" },
        { name: "basePrice", type: "uint256" },
        { name: "extra", type: "uint256" },
        { name: "listingTime", type: "uint256" },
        { name: "expirationTime", type: "uint256" },
        { name: "salt", type: "uint256" },
        { name: "nonce", type: "uint256" }
    ]
};
export const WyvernDomainNameEIP712 = "Wyvern Exchange Contract";
export const WyvernDomainVersionEIP712 = "2.3";

// For Extra Data
export const StaticCheckTxOrigin = [
    {
        constant: true,
        inputs: [],
        name: "succeedIfTxOriginMatchesHardcodedAddress",
        outputs: [],
        payable: false,
        stateMutability: "view",
        type: "function",
    },
    {
        constant: false,
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        constant: true,
        inputs: [{ name: "_specifiedAddress", type: "address" }],
        name: "succeedIfTxOriginMatchesSpecifiedAddress",
        outputs: [],
        payable: false,
        stateMutability: "view",
        type: "function",
    },
    {
        constant: true,
        inputs: [],
        name: "owner",
        outputs: [{ name: "", type: "address" }],
        payable: false,
        stateMutability: "view",
        type: "function",
    },
    {
        constant: true,
        inputs: [],
        name: "isOwner",
        outputs: [{ name: "", type: "bool" }],
        payable: false,
        stateMutability: "view",
        type: "function",
    },
    {
        constant: false,
        inputs: [{ name: "_newHardcodedAddress", type: "address" }],
        name: "changeHardcodedAddress",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        constant: false,
        inputs: [{ name: "newOwner", type: "address" }],
        name: "transferOwnership",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [{ name: "_hardcodedAddress", type: "address" }],
        payable: false,
        stateMutability: "nonpayable",
        type: "constructor"
    },
    {
        anonymous: false,
        inputs: [
          { indexed: false, name: "previousOwner", type: "address" },
          { indexed: false, name: "newOwner", type: "address" },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
];