import { WyvernProtocol } from "wyvern-js";
import encodeCall from "./EncodeCall";

const encodeSell = (schema, asset, address, validatorAddress) => {
    const transfer = validatorAddress && schema.functions.checkAndTransfer
        ? schema.functions.checkAndTransfer(asset, validatorAddress)
        : schema.functions.transfer(asset);
    
    // const transfer = schema.functions.transfer(asset);
    let defaultCall = encodeDefaultCall(transfer, address)
    let pattern = WyvernProtocol.encodeReplacementPattern(transfer)

    return {
        target: transfer.target,
        calldata: defaultCall,
        replacementPattern: pattern
    };
};

const encodeDefaultCall = (abi, address) => {
    const parameters = abi.inputs.map((input) => {
        switch (input.kind) {
            case "replaceable":
                return WyvernProtocol.generateDefaultValue(input.type);
            case "owner":
                return address;
            case "asset":
            default:
                return input.value;
        }
    });

    return encodeCall(abi, parameters);
};

export default encodeSell;