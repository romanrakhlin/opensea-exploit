import BigNumber from "bignumber.js";
import { MIN_EXPIRATION_SECONDS, ORDER_MATCHING_LATENCY_SECONDS } from "../Constants";

const getTimeParameters = (expirationTimestamp, listingTimestamp) => {
    const minListingTimestamp = Math.round(Date.now() / 1000);
    const minExpirationTimestamp = Math.round(Date.now() / 1000 + MIN_EXPIRATION_SECONDS);

    if (expirationTimestamp !== 0 && expirationTimestamp < minExpirationTimestamp) {
        throw new Error(`Expiration time must be at least ${MIN_EXPIRATION_SECONDS} seconds from now, or zero (non-expiring).`);
    }

    if (listingTimestamp && listingTimestamp < minListingTimestamp) {
        throw new Error("Listing time cannot be in the past.");
    }

    if (listingTimestamp && expirationTimestamp !== 0 && listingTimestamp >= expirationTimestamp) {
        throw new Error("Listing time must be before the expiration time.");
    }

    if (parseInt(expirationTimestamp.toString()) !== expirationTimestamp) {
        throw new Error(`Expiration timestamp must be a whole number of seconds`);
    }

    listingTimestamp = listingTimestamp || Math.round(Date.now() / 1000 - 100);
    expirationTimestamp = listingTimestamp + ORDER_MATCHING_LATENCY_SECONDS;

    return {
        listingTime: BigNumber(listingTimestamp),
        expirationTime: BigNumber(expirationTimestamp),
    };
};

export default getTimeParameters;