{"ast":null,"code":"\"use strict\";\n/* Sourced from 0x.js */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ethUtil = require(\"ethereumjs-util\");\n\nexports.signatureUtils = {\n  isValidSignature: function (data, signature, signerAddress) {\n    var dataBuff = ethUtil.toBuffer(data); // const msgHashBuff = ethUtil.hashPersonalMessage(dataBuff);\n\n    var msgHashBuff = dataBuff;\n\n    try {\n      var pubKey = ethUtil.ecrecover(msgHashBuff, signature.v, ethUtil.toBuffer(signature.r), ethUtil.toBuffer(signature.s));\n      var retrievedAddress = ethUtil.bufferToHex(ethUtil.pubToAddress(pubKey));\n      return retrievedAddress === signerAddress;\n    } catch (err) {\n      return false;\n    }\n  },\n  parseSignatureHexAsVRS: function (signatureHex) {\n    var signatureBuffer = ethUtil.toBuffer(signatureHex);\n    var v = signatureBuffer[0];\n\n    if (v < 27) {\n      v += 27;\n    }\n\n    var r = signatureBuffer.slice(1, 33);\n    var s = signatureBuffer.slice(33, 65);\n    var ecSignature = {\n      v: v,\n      r: ethUtil.bufferToHex(r),\n      s: ethUtil.bufferToHex(s)\n    };\n    return ecSignature;\n  },\n  parseSignatureHexAsRSV: function (signatureHex) {\n    var _a = ethUtil.fromRpcSig(signatureHex),\n        v = _a.v,\n        r = _a.r,\n        s = _a.s;\n\n    var ecSignature = {\n      v: v,\n      r: ethUtil.bufferToHex(r),\n      s: ethUtil.bufferToHex(s)\n    };\n    return ecSignature;\n  }\n};","map":{"version":3,"mappings":";AAAA;;;;;;AAEA;;AAIaA,yBAAiB;EAC1BC,gBAAgB,EAAhB,UAAiBC,IAAjB,EAA+BC,SAA/B,EAAuDC,aAAvD,EAA4E;IACxE,IAAMC,QAAQ,GAAGC,OAAO,CAACC,QAAR,CAAiBL,IAAjB,CAAjB,CADwE,CAExE;;IACA,IAAMM,WAAW,GAAGH,QAApB;;IACA,IAAI;MACA,IAAMI,MAAM,GAAGH,OAAO,CAACI,SAAR,CACXF,WADW,EAEXL,SAAS,CAACQ,CAFC,EAGXL,OAAO,CAACC,QAAR,CAAiBJ,SAAS,CAACS,CAA3B,CAHW,EAIXN,OAAO,CAACC,QAAR,CAAiBJ,SAAS,CAACU,CAA3B,CAJW,CAAf;MAMA,IAAMC,gBAAgB,GAAGR,OAAO,CAACS,WAAR,CAAoBT,OAAO,CAACU,YAAR,CAAqBP,MAArB,CAApB,CAAzB;MACA,OAAOK,gBAAgB,KAAKV,aAA5B;IACH,CATD,CASE,OAAOa,GAAP,EAAY;MACV,OAAO,KAAP;IACH;EACJ,CAjByB;EAkB1BC,sBAAsB,EAAtB,UAAuBC,YAAvB,EAA2C;IACvC,IAAMC,eAAe,GAAGd,OAAO,CAACC,QAAR,CAAiBY,YAAjB,CAAxB;IACA,IAAIR,CAAC,GAAGS,eAAe,CAAC,CAAD,CAAvB;;IACA,IAAIT,CAAC,GAAG,EAAR,EAAY;MACRA,CAAC,IAAI,EAAL;IACH;;IACD,IAAMC,CAAC,GAAGQ,eAAe,CAACC,KAAhB,CAAsB,CAAtB,EAAyB,EAAzB,CAAV;IACA,IAAMR,CAAC,GAAGO,eAAe,CAACC,KAAhB,CAAsB,EAAtB,EAA0B,EAA1B,CAAV;IACA,IAAMC,WAAW,GAAgB;MAC7BX,CAAC,GAD4B;MAE7BC,CAAC,EAAEN,OAAO,CAACS,WAAR,CAAoBH,CAApB,CAF0B;MAG7BC,CAAC,EAAEP,OAAO,CAACS,WAAR,CAAoBF,CAApB;IAH0B,CAAjC;IAKA,OAAOS,WAAP;EACH,CAhCyB;EAiC1BC,sBAAsB,EAAtB,UAAuBJ,YAAvB,EAA2C;IACjC;IAAA,IAAER,QAAF;IAAA,IAAKC,QAAL;IAAA,IAAQC,QAAR;;IACN,IAAMS,WAAW,GAAgB;MAC7BX,CAAC,GAD4B;MAE7BC,CAAC,EAAEN,OAAO,CAACS,WAAR,CAAoBH,CAApB,CAF0B;MAG7BC,CAAC,EAAEP,OAAO,CAACS,WAAR,CAAoBF,CAApB;IAH0B,CAAjC;IAKA,OAAOS,WAAP;EACH;AAzCyB,CAAjB","names":["exports","isValidSignature","data","signature","signerAddress","dataBuff","ethUtil","toBuffer","msgHashBuff","pubKey","ecrecover","v","r","s","retrievedAddress","bufferToHex","pubToAddress","err","parseSignatureHexAsVRS","signatureHex","signatureBuffer","slice","ecSignature","parseSignatureHexAsRSV"],"sourceRoot":"","sources":["../../src/utils/signature_utils.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}