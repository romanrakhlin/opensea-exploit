{"ast":null,"code":"const encodeBuy = (schema, asset, address, validatorAddress) => {\n  // const transfer = schema.functions.transfer(asset);\n  const transfer = validatorAddress && schema.functions.checkAndTransfer ? schema.functions.checkAndTransfer(asset, validatorAddress) : schema.functions.transfer(asset);\n  const replaceables = transfer.inputs.filter(i => i.kind === \"replaceable\");\n  const ownerInputs = transfer.inputs.filter(i => i.kind === \"owner\"); // Validate\n\n  if (replaceables.length !== 1) {\n    throw new Error(\"Only 1 input can match transfer destination, but instead \" + replaceables.length + \" did\");\n  } // Compute calldata\n\n\n  const parameters = transfer.inputs.map(input => {\n    switch (input.kind) {\n      case \"replaceable\":\n        return address;\n\n      case \"owner\":\n        return WyvernProtocol.generateDefaultValue(input.type);\n\n      default:\n        try {\n          return input.value.toString();\n        } catch (e) {\n          console.error(schema);\n          console.error(asset);\n          throw e;\n        }\n\n    }\n  });\n  const calldata = encodeCall(transfer, parameters); // Compute replacement pattern\n\n  let replacementPattern = \"0x\";\n\n  if (ownerInputs.length > 0) {\n    replacementPattern = WyvernProtocol.encodeReplacementPattern(transfer, \"owner\");\n  }\n\n  return {\n    target: transfer.target,\n    calldata,\n    replacementPattern\n  };\n};\n\nexport default encodeBuy;","map":{"version":3,"names":["encodeBuy","schema","asset","address","validatorAddress","transfer","functions","checkAndTransfer","replaceables","inputs","filter","i","kind","ownerInputs","length","Error","parameters","map","input","WyvernProtocol","generateDefaultValue","type","value","toString","e","console","error","calldata","encodeCall","replacementPattern","encodeReplacementPattern","target"],"sources":["/Users/romanrakhlin/Dropbox/Mac/Desktop/opensea-exploit/src/opensea-sdk/helpers/EncodeBuy.js"],"sourcesContent":["const encodeBuy = (schema, asset, address, validatorAddress) => {\n    // const transfer = schema.functions.transfer(asset);\n    const transfer = validatorAddress && schema.functions.checkAndTransfer\n        ? schema.functions.checkAndTransfer(asset, validatorAddress)\n        : schema.functions.transfer(asset);\n    const replaceables = transfer.inputs.filter((i) => i.kind === \"replaceable\");\n    const ownerInputs = transfer.inputs.filter((i) => i.kind === \"owner\");\n\n    // Validate\n    if (replaceables.length !== 1) {\n        throw new Error(\"Only 1 input can match transfer destination, but instead \" + replaceables.length + \" did\");\n    }\n\n    // Compute calldata\n    const parameters = transfer.inputs.map((input) => {\n        switch (input.kind) {\n            case \"replaceable\":\n                return address;\n            case \"owner\":\n                return WyvernProtocol.generateDefaultValue(input.type);\n            default:\n                try {\n                  return input.value.toString();\n                } catch (e) {\n                  console.error(schema);\n                  console.error(asset);\n                  throw e;\n                }\n        }\n    });\n\n    const calldata = encodeCall(transfer, parameters);\n\n    // Compute replacement pattern\n    let replacementPattern = \"0x\";\n    if (ownerInputs.length > 0) {\n        replacementPattern = WyvernProtocol.encodeReplacementPattern(transfer, \"owner\");\n    }\n\n    return {\n        target: transfer.target,\n        calldata,\n        replacementPattern,\n    };\n};\n\nexport default encodeBuy;"],"mappings":"AAAA,MAAMA,SAAS,GAAG,CAACC,MAAD,EAASC,KAAT,EAAgBC,OAAhB,EAAyBC,gBAAzB,KAA8C;EAC5D;EACA,MAAMC,QAAQ,GAAGD,gBAAgB,IAAIH,MAAM,CAACK,SAAP,CAAiBC,gBAArC,GACXN,MAAM,CAACK,SAAP,CAAiBC,gBAAjB,CAAkCL,KAAlC,EAAyCE,gBAAzC,CADW,GAEXH,MAAM,CAACK,SAAP,CAAiBD,QAAjB,CAA0BH,KAA1B,CAFN;EAGA,MAAMM,YAAY,GAAGH,QAAQ,CAACI,MAAT,CAAgBC,MAAhB,CAAwBC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAW,aAAzC,CAArB;EACA,MAAMC,WAAW,GAAGR,QAAQ,CAACI,MAAT,CAAgBC,MAAhB,CAAwBC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAW,OAAzC,CAApB,CAN4D,CAQ5D;;EACA,IAAIJ,YAAY,CAACM,MAAb,KAAwB,CAA5B,EAA+B;IAC3B,MAAM,IAAIC,KAAJ,CAAU,8DAA8DP,YAAY,CAACM,MAA3E,GAAoF,MAA9F,CAAN;EACH,CAX2D,CAa5D;;;EACA,MAAME,UAAU,GAAGX,QAAQ,CAACI,MAAT,CAAgBQ,GAAhB,CAAqBC,KAAD,IAAW;IAC9C,QAAQA,KAAK,CAACN,IAAd;MACI,KAAK,aAAL;QACI,OAAOT,OAAP;;MACJ,KAAK,OAAL;QACI,OAAOgB,cAAc,CAACC,oBAAf,CAAoCF,KAAK,CAACG,IAA1C,CAAP;;MACJ;QACI,IAAI;UACF,OAAOH,KAAK,CAACI,KAAN,CAAYC,QAAZ,EAAP;QACD,CAFD,CAEE,OAAOC,CAAP,EAAU;UACVC,OAAO,CAACC,KAAR,CAAczB,MAAd;UACAwB,OAAO,CAACC,KAAR,CAAcxB,KAAd;UACA,MAAMsB,CAAN;QACD;;IAZT;EAcH,CAfkB,CAAnB;EAiBA,MAAMG,QAAQ,GAAGC,UAAU,CAACvB,QAAD,EAAWW,UAAX,CAA3B,CA/B4D,CAiC5D;;EACA,IAAIa,kBAAkB,GAAG,IAAzB;;EACA,IAAIhB,WAAW,CAACC,MAAZ,GAAqB,CAAzB,EAA4B;IACxBe,kBAAkB,GAAGV,cAAc,CAACW,wBAAf,CAAwCzB,QAAxC,EAAkD,OAAlD,CAArB;EACH;;EAED,OAAO;IACH0B,MAAM,EAAE1B,QAAQ,CAAC0B,MADd;IAEHJ,QAFG;IAGHE;EAHG,CAAP;AAKH,CA5CD;;AA8CA,eAAe7B,SAAf"},"metadata":{},"sourceType":"module"}