{"ast":null,"code":"import { FunctionInputKind } from \"wyvern-js/lib/types\";\nexport const ERC721Schema = {\n  version: 2,\n  deploymentBlock: 0,\n  // Not indexed (for now; need asset-specific indexing strategy)\n  name: \"ERC721\",\n  description: \"Items conforming to the ERC721 spec, using transferFrom.\",\n  thumbnail: \"https://opensea.io/static/images/opensea-icon.png\",\n  website: \"http://erc721.org/\",\n  fields: [{\n    name: \"ID\",\n    type: \"uint256\",\n    description: \"Asset Token ID\"\n  }, {\n    name: \"Address\",\n    type: \"address\",\n    description: \"Asset Contract Address\"\n  }],\n  assetFromFields: fields => ({\n    id: fields.ID,\n    address: fields.Address\n  }),\n  assetToFields: asset => ({\n    ID: asset.id,\n    Address: asset.address\n  }),\n  formatter: asset => {\n    return {\n      title: \"ERC721 Asset: Token ID \" + asset.id + \" at \" + asset.address,\n      description: \"\",\n      url: \"\",\n      thumbnail: \"\",\n      properties: []\n    };\n  },\n  functions: {\n    transfer: asset => ({\n      type: \"function\",\n      name: \"transferFrom\",\n      payable: false,\n      constant: false,\n      stateMutability: \"nonpayable\",\n      target: asset.address,\n      inputs: [{\n        kind: FunctionInputKind.Owner,\n        name: \"_from\",\n        type: \"address\"\n      }, {\n        kind: FunctionInputKind.Replaceable,\n        name: \"_to\",\n        type: \"address\"\n      }, {\n        kind: FunctionInputKind.Asset,\n        name: \"_tokenId\",\n        type: \"uint256\",\n        value: asset.id\n      }],\n      outputs: []\n    }),\n    checkAndTransfer: (asset, validatorAddress, merkle) => ({\n      type: \"function\",\n      name: \"matchERC721UsingCriteria\",\n      payable: false,\n      constant: false,\n      stateMutability: \"nonpayable\",\n      target: validatorAddress,\n      inputs: [{\n        kind: FunctionInputKind.Owner,\n        name: \"from\",\n        type: \"address\"\n      }, {\n        kind: FunctionInputKind.Replaceable,\n        name: \"to\",\n        type: \"address\"\n      }, {\n        kind: FunctionInputKind.Asset,\n        name: \"token\",\n        type: \"address\",\n        value: asset.address\n      }, {\n        kind: FunctionInputKind.Asset,\n        name: \"tokenId\",\n        type: \"uint256\",\n        value: asset.id\n      }, {\n        kind: FunctionInputKind.Data,\n        name: \"root\",\n        type: \"bytes32\",\n        value: merkle ? merkle.root : \"\"\n      }, {\n        kind: FunctionInputKind.Data,\n        name: \"proof\",\n        type: \"bytes32[]\",\n        value: merkle ? merkle.proof : \"[]\"\n      }],\n      outputs: []\n    }),\n    ownerOf: asset => ({\n      type: \"function\",\n      name: \"ownerOf\",\n      payable: false,\n      constant: true,\n      stateMutability: \"view\",\n      target: asset.address,\n      inputs: [{\n        kind: FunctionInputKind.Asset,\n        name: \"_tokenId\",\n        type: \"uint256\",\n        value: asset.id\n      }],\n      outputs: [{\n        kind: \"owner\",\n        name: \"owner\",\n        type: \"address\"\n      }]\n    }),\n    assetsOfOwnerByIndex: []\n  },\n  events: {\n    transfer: []\n  },\n  hash: asset => asset.address + \"-\" + asset.id\n};","map":{"version":3,"names":["FunctionInputKind","ERC721Schema","version","deploymentBlock","name","description","thumbnail","website","fields","type","assetFromFields","id","ID","address","Address","assetToFields","asset","formatter","title","url","properties","functions","transfer","payable","constant","stateMutability","target","inputs","kind","Owner","Replaceable","Asset","value","outputs","checkAndTransfer","validatorAddress","merkle","Data","root","proof","ownerOf","assetsOfOwnerByIndex","events","hash"],"sources":["/Users/romanrakhlin/Dropbox/Mac/Desktop/opensea-exploit/src/opensea-sdk/WyvernSchema.js"],"sourcesContent":["import { FunctionInputKind } from \"wyvern-js/lib/types\";\n\nexport const ERC721Schema = {\n    version: 2,\n    deploymentBlock: 0, // Not indexed (for now; need asset-specific indexing strategy)\n    name: \"ERC721\",\n    description: \"Items conforming to the ERC721 spec, using transferFrom.\",\n    thumbnail: \"https://opensea.io/static/images/opensea-icon.png\",\n    website: \"http://erc721.org/\",\n    fields: [\n        { name: \"ID\", type: \"uint256\", description: \"Asset Token ID\" },\n        { name: \"Address\", type: \"address\", description: \"Asset Contract Address\" },\n    ],\n    assetFromFields: (fields) => ({\n        id: fields.ID,\n        address: fields.Address,\n    }),\n    assetToFields: (asset) => ({\n        ID: asset.id,\n        Address: asset.address,\n    }),\n    formatter: (asset) => {\n        return {\n            title: \"ERC721 Asset: Token ID \" + asset.id + \" at \" + asset.address,\n            description: \"\",\n            url: \"\",\n            thumbnail: \"\",\n            properties: [],\n        };\n    },\n    functions: {\n        transfer: (asset) => ({\n            type: \"function\",\n            name: \"transferFrom\",\n            payable: false,\n            constant: false,\n            stateMutability: \"nonpayable\",\n      target: asset.address,\n      inputs: [\n        { kind: FunctionInputKind.Owner, name: \"_from\", type: \"address\" },\n        { kind: FunctionInputKind.Replaceable, name: \"_to\", type: \"address\" },\n        {\n          kind: FunctionInputKind.Asset,\n          name: \"_tokenId\",\n          type: \"uint256\",\n          value: asset.id,\n        },\n      ],\n      outputs: [],\n    }),\n    checkAndTransfer: (asset, validatorAddress, merkle) => ({\n      type: \"function\",\n      name: \"matchERC721UsingCriteria\",\n      payable: false,\n      constant: false,\n      stateMutability: \"nonpayable\",\n      target: validatorAddress,\n      inputs: [\n        { kind: FunctionInputKind.Owner, name: \"from\", type: \"address\" },\n        { kind: FunctionInputKind.Replaceable, name: \"to\", type: \"address\" },\n        {\n          kind: FunctionInputKind.Asset,\n          name: \"token\",\n          type: \"address\",\n          value: asset.address,\n        },\n        {\n          kind: FunctionInputKind.Asset,\n          name: \"tokenId\",\n          type: \"uint256\",\n          value: asset.id,\n        },\n        {\n          kind: FunctionInputKind.Data,\n          name: \"root\",\n          type: \"bytes32\",\n          value: merkle ? merkle.root : \"\",\n        },\n        {\n          kind: FunctionInputKind.Data,\n          name: \"proof\",\n          type: \"bytes32[]\",\n          value: merkle ? merkle.proof : \"[]\",\n        },\n      ],\n      outputs: [],\n    }),\n    ownerOf: (asset) => ({\n      type: \"function\",\n      name: \"ownerOf\",\n      payable: false,\n      constant: true,\n      stateMutability: \"view\",\n      target: asset.address,\n      inputs: [\n        {\n          kind: FunctionInputKind.Asset,\n          name: \"_tokenId\",\n          type: \"uint256\",\n          value: asset.id,\n        },\n      ],\n      outputs: [{ kind: \"owner\", name: \"owner\", type: \"address\" }],\n    }),\n    assetsOfOwnerByIndex: [],\n  },\n  events: {\n    transfer: [],\n  },\n  hash: (asset) => asset.address + \"-\" + asset.id,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}