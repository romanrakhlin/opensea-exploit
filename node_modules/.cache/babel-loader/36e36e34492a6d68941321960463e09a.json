{"ast":null,"code":"const performOrder = async _ref => {\n  let {\n    order,\n    provider,\n    accountAddress,\n    recipientAddress,\n    referrerAddress\n  } = _ref;\n  console.info(`Account: ${accountAddress} | Recipient: ${recipientAddress} | Referrer: ${referrerAddress}`); // check if valid order\n\n  const wyvernExchange = WyvernContract(provider);\n  const isValid = await validateOrder({\n    order,\n    accountAddress,\n    wyvernExchange\n  });\n  const matchingOrder = makeMatchingOrder({\n    order,\n    accountAddress,\n    recipientAddress: recipientAddress\n  });\n  const {\n    buy,\n    sell\n  } = assignOrdersToSides(order, matchingOrder);\n\n  const metadata = _getMetadata(order, referrerAddress);\n\n  return await _atomicMatch({\n    buy,\n    sell,\n    accountAddress,\n    wyvernExchange,\n    metadata\n  });\n};\n\nexport default performOrder;","map":{"version":3,"names":["performOrder","order","provider","accountAddress","recipientAddress","referrerAddress","console","info","wyvernExchange","WyvernContract","isValid","validateOrder","matchingOrder","makeMatchingOrder","buy","sell","assignOrdersToSides","metadata","_getMetadata","_atomicMatch"],"sources":["/Users/romanrakhlin/Dropbox/Mac/Desktop/opensea-exploit/src/opensea-sdk/methods/PerformOrder.js"],"sourcesContent":["const performOrder = async ({\n    order,\n    provider,\n    accountAddress,\n    recipientAddress,\n    referrerAddress\n}) => {\n    console.info(`Account: ${accountAddress} | Recipient: ${recipientAddress} | Referrer: ${referrerAddress}`);\n\n    // check if valid order\n    const wyvernExchange = WyvernContract(provider);\n    const isValid = await validateOrder({ order, accountAddress, wyvernExchange });\n\n    const matchingOrder = makeMatchingOrder({\n        order,\n        accountAddress,\n        recipientAddress: recipientAddress\n    });\n\n    const { buy, sell } = assignOrdersToSides(order, matchingOrder);\n    const metadata = _getMetadata(order, referrerAddress);\n\n    return await _atomicMatch({\n        buy,\n        sell,\n        accountAddress,\n        wyvernExchange,\n        metadata\n    });\n};\n\nexport default performOrder;"],"mappings":"AAAA,MAAMA,YAAY,GAAG,cAMf;EAAA,IANsB;IACxBC,KADwB;IAExBC,QAFwB;IAGxBC,cAHwB;IAIxBC,gBAJwB;IAKxBC;EALwB,CAMtB;EACFC,OAAO,CAACC,IAAR,CAAc,YAAWJ,cAAe,iBAAgBC,gBAAiB,gBAAeC,eAAgB,EAAxG,EADE,CAGF;;EACA,MAAMG,cAAc,GAAGC,cAAc,CAACP,QAAD,CAArC;EACA,MAAMQ,OAAO,GAAG,MAAMC,aAAa,CAAC;IAAEV,KAAF;IAASE,cAAT;IAAyBK;EAAzB,CAAD,CAAnC;EAEA,MAAMI,aAAa,GAAGC,iBAAiB,CAAC;IACpCZ,KADoC;IAEpCE,cAFoC;IAGpCC,gBAAgB,EAAEA;EAHkB,CAAD,CAAvC;EAMA,MAAM;IAAEU,GAAF;IAAOC;EAAP,IAAgBC,mBAAmB,CAACf,KAAD,EAAQW,aAAR,CAAzC;;EACA,MAAMK,QAAQ,GAAGC,YAAY,CAACjB,KAAD,EAAQI,eAAR,CAA7B;;EAEA,OAAO,MAAMc,YAAY,CAAC;IACtBL,GADsB;IAEtBC,IAFsB;IAGtBZ,cAHsB;IAItBK,cAJsB;IAKtBS;EALsB,CAAD,CAAzB;AAOH,CA7BD;;AA+BA,eAAejB,YAAf"},"metadata":{},"sourceType":"module"}