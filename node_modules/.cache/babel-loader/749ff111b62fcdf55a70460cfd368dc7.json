{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n  }\n\n  return t;\n};\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar json_schemas_1 = require(\"@0xproject/json-schemas\");\n\nvar utils_1 = require(\"@0xproject/utils\");\n\nvar web3_wrapper_1 = require(\"@0xproject/web3-wrapper\");\n\nvar ethABI = require(\"ethereumjs-abi\");\n\nvar ethUtil = require(\"ethereumjs-util\");\n\nvar _ = require(\"lodash\");\n\nvar authenticated_proxy_1 = require(\"./abi_gen/authenticated_proxy\");\n\nvar wyvern_atomicizer_1 = require(\"./abi_gen/wyvern_atomicizer\");\n\nvar wyvern_d_a_o_1 = require(\"./abi_gen/wyvern_d_a_o\");\n\nvar wyvern_exchange_1 = require(\"./abi_gen/wyvern_exchange\");\n\nvar wyvern_proxy_registry_1 = require(\"./abi_gen/wyvern_proxy_registry\");\n\nvar wyvern_token_1 = require(\"./abi_gen/wyvern_token\");\n\nvar schemas_1 = require(\"./schemas\");\n\nvar types_1 = require(\"./types\");\n\nvar assert_1 = require(\"./utils/assert\");\n\nvar constants_1 = require(\"./utils/constants\");\n\nvar decorators_1 = require(\"./utils/decorators\");\n\nvar signature_utils_1 = require(\"./utils/signature_utils\");\n\nvar utils_2 = require(\"./utils/utils\");\n\nvar WyvernProtocol =\n/** @class */\nfunction () {\n  function WyvernProtocol(provider, config) {\n    assert_1.assert.isWeb3Provider('provider', provider); // assert.doesConformToSchema('config', config, wyvernProtocolConfigSchema)\n\n    this._web3Wrapper = new web3_wrapper_1.Web3Wrapper(provider, {\n      gasPrice: config.gasPrice\n    });\n    var exchangeContractAddress = config.wyvernExchangeContractAddress || WyvernProtocol.getExchangeContractAddress(config.network);\n    this.wyvernExchange = new wyvern_exchange_1.WyvernExchangeContract(this._web3Wrapper.getContractInstance(constants_1.constants.EXCHANGE_ABI, exchangeContractAddress), {});\n    var proxyRegistryContractAddress = config.wyvernProxyRegistryContractAddress || WyvernProtocol.getProxyRegistryContractAddress(config.network);\n    this.wyvernProxyRegistry = new wyvern_proxy_registry_1.WyvernProxyRegistryContract(this._web3Wrapper.getContractInstance(constants_1.constants.PROXY_REGISTRY_ABI, proxyRegistryContractAddress), {});\n    var daoContractAddress = config.wyvernDAOContractAddress || WyvernProtocol.getDAOContractAddress(config.network);\n    this.wyvernDAO = new wyvern_d_a_o_1.WyvernDAOContract(this._web3Wrapper.getContractInstance(constants_1.constants.DAO_ABI, daoContractAddress), {});\n    var tokenContractAddress = config.wyvernTokenContractAddress || WyvernProtocol.getTokenContractAddress(config.network);\n    this.wyvernToken = new wyvern_token_1.WyvernTokenContract(this._web3Wrapper.getContractInstance(constants_1.constants.TOKEN_ABI, tokenContractAddress), {});\n    var atomicizerContractAddress = config.wyvernAtomicizerContractAddress || WyvernProtocol.getAtomicizerContractAddress(config.network);\n    this.wyvernAtomicizer = new wyvern_atomicizer_1.WyvernAtomicizerContract(this._web3Wrapper.getContractInstance(constants_1.constants.ATOMICIZER_ABI, atomicizerContractAddress), {});\n  }\n\n  WyvernProtocol.getExchangeContractAddress = function (network) {\n    return constants_1.constants.DEPLOYED[network].WyvernExchange;\n  };\n\n  WyvernProtocol.getProxyRegistryContractAddress = function (network) {\n    return constants_1.constants.DEPLOYED[network].WyvernProxyRegistry;\n  };\n\n  WyvernProtocol.getTokenContractAddress = function (network) {\n    return constants_1.constants.DEPLOYED[network].WyvernToken;\n  };\n\n  WyvernProtocol.getDAOContractAddress = function (network) {\n    return constants_1.constants.DEPLOYED[network].WyvernDAO;\n  };\n\n  WyvernProtocol.getAtomicizerContractAddress = function (network) {\n    return constants_1.constants.DEPLOYED[network].WyvernAtomicizer;\n  };\n\n  WyvernProtocol.getTokenTransferProxyAddress = function (network) {\n    return constants_1.constants.DEPLOYED[network].WyvernTokenTransferProxy;\n  };\n  /**\n   * Verifies that the elliptic curve signature `signature` was generated\n   * by signing `data` with the private key corresponding to the `signerAddress` address.\n   * @param   data          The hex encoded data signed by the supplied signature.\n   * @param   signature     An object containing the elliptic curve signature parameters.\n   * @param   signerAddress The hex encoded address that signed the data, producing the supplied signature.\n   * @return  Whether the signature is valid for the supplied signerAddress and data.\n   */\n\n\n  WyvernProtocol.isValidSignature = function (data, signature, signerAddress) {\n    assert_1.assert.isHexString('data', data);\n    assert_1.assert.doesConformToSchema('signature', signature, schemas_1.schemas.ecSignatureSchema);\n    assert_1.assert.isETHAddressHex('signerAddress', signerAddress);\n    var isValidSignature = signature_utils_1.signatureUtils.isValidSignature(data, signature, signerAddress);\n    return isValidSignature;\n  };\n  /**\n   * Generates a pseudo-random 256-bit salt.\n   * The salt can be included in an 0x order, ensuring that the order generates a unique orderHash\n   * and will not collide with other outstanding orders that are identical in all other parameters.\n   * @return  A pseudo-random 256-bit number that can be used as a salt.\n   */\n\n\n  WyvernProtocol.generatePseudoRandomSalt = function () {\n    // BigNumber.random returns a pseudo-random number between 0 & 1 with a passed in number of decimal places.\n    // Source: https://mikemcl.github.io/bignumber.js/#random\n    var randomNumber = utils_1.BigNumber.random(constants_1.constants.MAX_DIGITS_IN_UNSIGNED_256_INT);\n    var factor = new utils_1.BigNumber(10).pow(constants_1.constants.MAX_DIGITS_IN_UNSIGNED_256_INT - 1);\n    var salt = randomNumber.times(factor).round();\n    return salt;\n  };\n  /**\n   * Checks if the supplied hex encoded order hash is valid.\n   * Note: Valid means it has the expected format, not that an order with the orderHash exists.\n   * Use this method when processing orderHashes submitted as user input.\n   * @param   orderHash    Hex encoded orderHash.\n   * @return  Whether the supplied orderHash has the expected format.\n   */\n\n\n  WyvernProtocol.isValidOrderHash = function (orderHash) {\n    // Since this method can be called to check if any arbitrary string conforms to an orderHash's\n    // format, we only assert that we were indeed passed a string.\n    assert_1.assert.isString('orderHash', orderHash);\n    var schemaValidator = new json_schemas_1.SchemaValidator();\n    var isValidOrderHash = schemaValidator.validate(orderHash, schemas_1.schemas.orderHashSchema).valid;\n    return isValidOrderHash;\n  };\n  /**\n   * A unit amount is defined as the amount of a token above the specified decimal places (integer part).\n   * E.g: If a currency has 18 decimal places, 1e18 or one quintillion of the currency is equivalent\n   * to 1 unit.\n   * @param   amount      The amount in baseUnits that you would like converted to units.\n   * @param   decimals    The number of decimal places the unit amount has.\n   * @return  The amount in units.\n   */\n\n\n  WyvernProtocol.toUnitAmount = function (amount, decimals) {\n    assert_1.assert.isValidBaseUnitAmount('amount', amount);\n    assert_1.assert.isNumber('decimals', decimals);\n    var aUnit = new utils_1.BigNumber(10).pow(decimals);\n    var unit = amount.div(aUnit);\n    return unit;\n  };\n  /**\n   * A baseUnit is defined as the smallest denomination of a token. An amount expressed in baseUnits\n   * is the amount expressed in the smallest denomination.\n   * E.g: 1 unit of a token with 18 decimal places is expressed in baseUnits as 1000000000000000000\n   * @param   amount      The amount of units that you would like converted to baseUnits.\n   * @param   decimals    The number of decimal places the unit amount has.\n   * @return  The amount in baseUnits.\n   */\n\n\n  WyvernProtocol.toBaseUnitAmount = function (amount, decimals) {\n    assert_1.assert.isBigNumber('amount', amount);\n    assert_1.assert.isNumber('decimals', decimals);\n    var unit = new utils_1.BigNumber(10).pow(decimals);\n    var baseUnitAmount = amount.times(unit);\n    var hasDecimals = baseUnitAmount.decimalPlaces() !== 0;\n\n    if (hasDecimals) {\n      throw new Error(\"Invalid unit amount: \" + amount.toString() + \" - Too many decimal places\");\n    }\n\n    return baseUnitAmount;\n  };\n  /**\n   * Computes the orderHash for a supplied order.\n   * @param   order   An object that conforms to the Order or SignedOrder interface definitions.\n   * @return  The resulting orderHash from hashing the supplied order.\n   */\n\n\n  WyvernProtocol.getOrderHashHex = function (order) {\n    assert_1.assert.doesConformToSchema('order', order, schemas_1.schemas.orderSchema);\n    var orderHashHex = utils_2.utils.getOrderHashHex(order);\n    return orderHashHex;\n  };\n  /**\n   * Computes the assetHash for a supplied asset.\n   */\n\n\n  WyvernProtocol.getAssetHashHex = function (assetHash, schema) {\n    var assetHashHex = utils_2.utils.getAssetHashHex(assetHash, schema);\n    return assetHashHex;\n  };\n  /**\n   * Sets a new web3 provider for wyvernProtocol.js. Updating the provider will stop all\n   * subscriptions so you will need to re-subscribe to all events relevant to your app after this call.\n   * @param   provider    The Web3Provider you would like the wyvernProtocol.js library to use from now on.\n   * @param   networkId   The id of the network your provider is connected to\n   */\n\n\n  WyvernProtocol.prototype.setProvider = function (provider, networkId) {\n    this._web3Wrapper.setProvider(provider);\n\n    this.wyvernExchange._invalidateContractInstances();\n\n    this.wyvernExchange._setNetworkId(networkId);\n\n    this.wyvernProxyRegistry._invalidateContractInstance();\n\n    this.wyvernProxyRegistry._setNetworkId(networkId);\n  };\n  /**\n   * Get user Ethereum addresses available through the supplied web3 provider available for sending transactions.\n   * @return  An array of available user Ethereum addresses.\n   */\n\n\n  WyvernProtocol.prototype.getAvailableAddressesAsync = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var availableAddresses;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._web3Wrapper.getAvailableAddressesAsync()];\n\n          case 1:\n            availableAddresses = _a.sent();\n            return [2\n            /*return*/\n            , availableAddresses];\n        }\n      });\n    });\n  };\n  /**\n   * Gets the authenticated proxy contract for a specific account address\n   * @param accountAddress address to retrieve the proxy contract from\n   */\n\n\n  WyvernProtocol.prototype.getAuthenticatedProxy = function (accountAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n      var proxyAddress;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.wyvernProxyRegistry.proxies.callAsync(accountAddress)];\n\n          case 1:\n            proxyAddress = _a.sent();\n            return [2\n            /*return*/\n            , new authenticated_proxy_1.AuthenticatedProxyContract(this._web3Wrapper.getContractInstance(constants_1.constants.AUTHENTICATED_PROXY_ABI, proxyAddress), {})];\n        }\n      });\n    });\n  };\n  /**\n   * Signs an orderHash and returns its elliptic curve signature.\n   * This method currently supports TestRPC, Geth and Parity above and below V1.6.6\n   * @param   orderHash       Hex encoded orderHash to sign.\n   * @param   signerAddress   The hex encoded Ethereum address you wish to sign it with. This address\n   *          must be available via the Web3.Provider supplied to wyvernProtocol.js.\n   * @return  An object containing the Elliptic curve signature parameters generated by signing the orderHash.\n   */\n\n\n  WyvernProtocol.prototype.signOrderHashAsync = function (orderHash, signerAddress) {\n    return __awaiter(this, void 0, void 0, function () {\n      var msgHashHex, nodeVersion, isParityNode, isTestRpc, orderHashBuff, msgHashBuff, signature, validVParamValues, ecSignatureVRS, isValidVRSSignature, ecSignatureRSV, isValidRSVSignature;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            assert_1.assert.isHexString('orderHash', orderHash);\n            return [4\n            /*yield*/\n            , this._web3Wrapper.getNodeVersionAsync()];\n\n          case 1:\n            nodeVersion = _a.sent();\n            isParityNode = utils_2.utils.isParityNode(nodeVersion);\n            isTestRpc = utils_2.utils.isTestRpc(nodeVersion);\n\n            if (isParityNode || isTestRpc) {\n              // Parity and TestRpc nodes add the personalMessage prefix itself\n              msgHashHex = orderHash;\n            } else {\n              orderHashBuff = ethUtil.toBuffer(orderHash);\n              msgHashBuff = ethUtil.hashPersonalMessage(orderHashBuff);\n              msgHashHex = ethUtil.bufferToHex(msgHashBuff);\n            }\n\n            return [4\n            /*yield*/\n            , this._web3Wrapper.signTransactionAsync(signerAddress, msgHashHex)];\n\n          case 2:\n            signature = _a.sent();\n            validVParamValues = [27, 28];\n            ecSignatureVRS = signature_utils_1.signatureUtils.parseSignatureHexAsVRS(signature);\n\n            if (_.includes(validVParamValues, ecSignatureVRS.v)) {\n              isValidVRSSignature = WyvernProtocol.isValidSignature(orderHash, ecSignatureVRS, signerAddress);\n\n              if (isValidVRSSignature) {\n                return [2\n                /*return*/\n                , ecSignatureVRS];\n              }\n            }\n\n            ecSignatureRSV = signature_utils_1.signatureUtils.parseSignatureHexAsRSV(signature);\n\n            if (_.includes(validVParamValues, ecSignatureRSV.v)) {\n              isValidRSVSignature = WyvernProtocol.isValidSignature(orderHash, ecSignatureRSV, signerAddress);\n\n              if (isValidRSVSignature) {\n                return [2\n                /*return*/\n                , ecSignatureRSV];\n              }\n            }\n\n            throw new Error(types_1.WyvernProtocolError.InvalidSignature);\n        }\n      });\n    });\n  };\n  /**\n   * Waits for a transaction to be mined and returns the transaction receipt.\n   * @param   txHash            Transaction hash\n   * @param   pollingIntervalMs How often (in ms) should we check if the transaction is mined.\n   * @param   timeoutMs         How long (in ms) to poll for transaction mined until aborting.\n   * @return  Transaction receipt with decoded log args.\n   */\n\n\n  WyvernProtocol.prototype.awaitTransactionMinedAsync = function (txHash, pollingIntervalMs, timeoutMs) {\n    if (pollingIntervalMs === void 0) {\n      pollingIntervalMs = 1000;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var timeoutExceeded, txReceiptPromise;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        timeoutExceeded = false;\n\n        if (timeoutMs) {\n          setTimeout(function () {\n            return timeoutExceeded = true;\n          }, timeoutMs);\n        }\n\n        txReceiptPromise = new Promise(function (resolve, reject) {\n          var intervalId = utils_1.intervalUtils.setAsyncExcludingInterval(function () {\n            return __awaiter(_this, void 0, void 0, function () {\n              var transactionReceipt, logsWithDecodedArgs, transactionReceiptWithDecodedLogArgs;\n              return __generator(this, function (_a) {\n                switch (_a.label) {\n                  case 0:\n                    if (timeoutExceeded) {\n                      utils_1.intervalUtils.clearAsyncExcludingInterval(intervalId);\n                      return [2\n                      /*return*/\n                      , reject(types_1.WyvernProtocolError.TransactionMiningTimeout)];\n                    }\n\n                    return [4\n                    /*yield*/\n                    , this._web3Wrapper.getTransactionReceiptAsync(txHash)];\n\n                  case 1:\n                    transactionReceipt = _a.sent();\n\n                    if (!_.isNull(transactionReceipt)) {\n                      utils_1.intervalUtils.clearAsyncExcludingInterval(intervalId);\n                      logsWithDecodedArgs = _.map(transactionReceipt.logs, this._abiDecoder.tryToDecodeLogOrNoop.bind(this._abiDecoder));\n                      transactionReceiptWithDecodedLogArgs = __assign({}, transactionReceipt, {\n                        logs: logsWithDecodedArgs\n                      });\n                      resolve(transactionReceiptWithDecodedLogArgs);\n                    }\n\n                    return [2\n                    /*return*/\n                    ];\n                }\n              });\n            });\n          }, pollingIntervalMs, function () {\n            return {};\n          });\n        });\n        return [2\n        /*return*/\n        , txReceiptPromise];\n      });\n    });\n  };\n\n  WyvernProtocol.NULL_ADDRESS = constants_1.constants.NULL_ADDRESS;\n  WyvernProtocol.MAX_UINT_256 = new utils_1.BigNumber(2).pow(256).sub(1);\n  /**\n   * Encodes the replacementPattern for a supplied ABI and replace kind\n   * @param   abi AnnotatedFunctionABI\n   * @param   replaceKind Parameter kind to replace\n   * @return  The resulting encoded replacementPattern\n   */\n\n  WyvernProtocol.encodeReplacementPattern = function (abi, replaceKind, encodeToBytes) {\n    if (replaceKind === void 0) {\n      replaceKind = types_1.FunctionInputKind.Replaceable;\n    }\n\n    if (encodeToBytes === void 0) {\n      encodeToBytes = true;\n    }\n\n    var output = [];\n    var data = [];\n    var dynamicOffset = abi.inputs.reduce(function (len, _a) {\n      var type = _a.type;\n      var match = type.match(/\\[(.+)\\]$/);\n      return len + (match ? parseInt(match[1], 10) * 32 : 32);\n    }, 0);\n    abi.inputs.map(function (_a) {\n      var kind = _a.kind,\n          type = _a.type,\n          value = _a.value;\n      return {\n        bitmask: kind === replaceKind ? 255 : 0,\n        type: ethABI.elementaryName(type),\n        value: value !== undefined ? value : WyvernProtocol.generateDefaultValue(type)\n      };\n    }).reduce(function (offset, _a) {\n      var bitmask = _a.bitmask,\n          type = _a.type,\n          value = _a.value; // The 0xff bytes in the mask select the replacement bytes. All other bytes are 0x00.\n\n      var cur = new Buffer(ethABI.encodeSingle(type, value).length).fill(bitmask);\n\n      if (ethABI.isDynamic(type)) {\n        if (bitmask) {\n          throw new Error('Replacement is not supported for dynamic parameters.');\n        }\n\n        output.push(new Buffer(ethABI.encodeSingle('uint256', dynamicOffset).length));\n        data.push(cur);\n        return offset + cur.length;\n      }\n\n      output.push(cur);\n      return offset;\n    }, dynamicOffset); // 4 initial bytes of 0x00 for the method hash.\n\n    var methodIdMask = new Buffer(4);\n    var mask = Buffer.concat([methodIdMask, Buffer.concat(output.concat(data))]);\n    return encodeToBytes ? \"0x\" + mask.toString('hex') : mask.map(function (b) {\n      return b ? 1 : 0;\n    }).join('');\n  };\n  /**\n   * Encodes the atomicized replacementPattern for a supplied ABI and replace kind\n   * @param   abis array of AnnotatedFunctionABI\n   * @param   replaceKind Parameter kind to replace\n   * @return  The resulting encoded replacementPattern\n   */\n\n\n  WyvernProtocol.encodeAtomicizedReplacementPattern = function (abis, replaceKind) {\n    if (replaceKind === void 0) {\n      replaceKind = types_1.FunctionInputKind.Replaceable;\n    }\n\n    var allowReplaceByte = '1';\n    var doNotAllowReplaceByte = '0';\n    /* Four bytes for method ID. */\n\n    var maskArr = [doNotAllowReplaceByte, doNotAllowReplaceByte, doNotAllowReplaceByte, doNotAllowReplaceByte];\n    var encodedUint256 = ethABI.encodeSingle(ethABI.elementaryName('uint256'), WyvernProtocol.generateDefaultValue('uint256'));\n    var dataLocationSize = encodedUint256.length;\n    var dynamicArgumentLengthSize = encodedUint256.length; // See https://solidity.readthedocs.io/en/develop/abi-spec.html#examples\n    // Prepare dymanic types to be passed in (they need locations of their data parts). 4 for addresses, values, calldata lengths, calldatas\n\n    maskArr.push(doNotAllowReplaceByte.repeat(dataLocationSize * 4)); // Length of addresses array\n\n    maskArr.push(doNotAllowReplaceByte.repeat(dynamicArgumentLengthSize)); // Addresses should not be replaced\n\n    var encoded = ethABI.encodeSingle(ethABI.elementaryName('address'), WyvernProtocol.generateDefaultValue('address'));\n    maskArr.push(doNotAllowReplaceByte.repeat(encoded.length * abis.length)); // Length of values array\n\n    maskArr.push(doNotAllowReplaceByte.repeat(dynamicArgumentLengthSize)); // Add the values...\n\n    encoded = ethABI.encodeSingle(ethABI.elementaryName('uint'), WyvernProtocol.generateDefaultValue('uint'));\n    maskArr.push(doNotAllowReplaceByte.repeat(encoded.length * abis.length)); // Length of calldata lengths array\n\n    maskArr.push(doNotAllowReplaceByte.repeat(dynamicArgumentLengthSize)); // ... and calldata lengths\n\n    maskArr.push(doNotAllowReplaceByte.repeat(encoded.length * abis.length)); // Length of replacementPatterns\n\n    maskArr.push(doNotAllowReplaceByte.repeat(dynamicArgumentLengthSize)); // Raw replacementPatterns\n\n    var replacementBytes = [];\n    abis.map(function (abi) {\n      var replacement = WyvernProtocol.encodeReplacementPattern(abi, replaceKind, false);\n      replacementBytes.push(replacement);\n    });\n    var concatenatedReplacementPatterns = replacementBytes.join('');\n    maskArr.push(concatenatedReplacementPatterns);\n\n    if (concatenatedReplacementPatterns.length % 32 !== 0) {\n      // Pad replacementPatterns to nearest multiple of 32\n      maskArr.push(doNotAllowReplaceByte.repeat(32 - concatenatedReplacementPatterns.length % 32));\n    }\n\n    var mask = maskArr.reduce(function (x, y) {\n      return x + y;\n    }, '');\n    var ret = [];\n    /* Encode into bytes. */\n\n    for (var _i = 0, mask_1 = mask; _i < mask_1.length; _i++) {\n      var char = mask_1[_i];\n      var byte = char === allowReplaceByte ? 255 : 0;\n      var buf = Buffer.alloc(1);\n      buf.writeUInt8(byte, 0);\n      ret.push(buf);\n    }\n\n    return '0x' + Buffer.concat(ret).toString('hex');\n  };\n  /**\n   * Computes the default value for a type\n   * @param type The ABI type to calculate a default value for\n   * @return The default value for that type\n   */\n\n\n  WyvernProtocol.generateDefaultValue = function (type) {\n    switch (type) {\n      case 'address':\n      case 'bytes20':\n        /* Null address is sometimes checked in transfer calls. */\n        // But we need to use 0x000 because bitwise XOR won't work if there's a 0 in the actual address, since it will be replaced as 1 OR 0 = 1\n        return '0x0000000000000000000000000000000000000000';\n\n      case 'bytes32':\n        return '0x0000000000000000000000000000000000000000000000000000000000000000';\n\n      case 'bool':\n        return false;\n\n      case 'int':\n      case 'uint':\n      case 'uint8':\n      case 'uint16':\n      case 'uint32':\n      case 'uint64':\n      case 'uint256':\n        return 0;\n\n      default:\n        throw new Error('Default value not yet implemented for type: ' + type);\n    }\n  };\n\n  __decorate([decorators_1.decorators.syncWyvernProtocolErrorHandler], WyvernProtocol, \"getOrderHashHex\", null);\n\n  return WyvernProtocol;\n}();\n\nexports.WyvernProtocol = WyvernProtocol;","map":{"version":3,"mappings":"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","names":["provider","config","assert_1","isWeb3Provider","_web3Wrapper","web3_wrapper_1","gasPrice","exchangeContractAddress","wyvernExchangeContractAddress","WyvernProtocol","getExchangeContractAddress","network","wyvernExchange","wyvern_exchange_1","getContractInstance","constants_1","EXCHANGE_ABI","proxyRegistryContractAddress","wyvernProxyRegistryContractAddress","getProxyRegistryContractAddress","wyvernProxyRegistry","wyvern_proxy_registry_1","PROXY_REGISTRY_ABI","daoContractAddress","wyvernDAOContractAddress","getDAOContractAddress","wyvernDAO","wyvern_d_a_o_1","DAO_ABI","tokenContractAddress","wyvernTokenContractAddress","getTokenContractAddress","wyvernToken","wyvern_token_1","TOKEN_ABI","atomicizerContractAddress","wyvernAtomicizerContractAddress","getAtomicizerContractAddress","wyvernAtomicizer","wyvern_atomicizer_1","ATOMICIZER_ABI","DEPLOYED","WyvernExchange","WyvernProxyRegistry","WyvernToken","WyvernDAO","WyvernAtomicizer","WyvernTokenTransferProxy","data","signature","signerAddress","isHexString","doesConformToSchema","schemas_1","ecSignatureSchema","isETHAddressHex","isValidSignature","signature_utils_1","randomNumber","utils_1","random","MAX_DIGITS_IN_UNSIGNED_256_INT","factor","pow","salt","times","round","orderHash","isString","schemaValidator","json_schemas_1","isValidOrderHash","validate","orderHashSchema","valid","amount","decimals","isValidBaseUnitAmount","isNumber","aUnit","unit","div","isBigNumber","baseUnitAmount","hasDecimals","decimalPlaces","Error","toString","order","orderSchema","orderHashHex","utils_2","getOrderHashHex","assetHash","schema","assetHashHex","getAssetHashHex","networkId","setProvider","_invalidateContractInstances","_setNetworkId","_invalidateContractInstance","getAvailableAddressesAsync","availableAddresses","_a","accountAddress","proxies","callAsync","proxyAddress","authenticated_proxy_1","AUTHENTICATED_PROXY_ABI","getNodeVersionAsync","nodeVersion","isParityNode","isTestRpc","msgHashHex","orderHashBuff","ethUtil","toBuffer","msgHashBuff","hashPersonalMessage","bufferToHex","signTransactionAsync","validVParamValues","ecSignatureVRS","parseSignatureHexAsVRS","_","includes","v","isValidVRSSignature","ecSignatureRSV","parseSignatureHexAsRSV","isValidRSVSignature","types_1","InvalidSignature","txHash","pollingIntervalMs","timeoutMs","timeoutExceeded","setTimeout","txReceiptPromise","Promise","resolve","reject","intervalId","setAsyncExcludingInterval","clearAsyncExcludingInterval","TransactionMiningTimeout","getTransactionReceiptAsync","transactionReceipt","isNull","logsWithDecodedArgs","map","logs","_abiDecoder","tryToDecodeLogOrNoop","bind","transactionReceiptWithDecodedLogArgs","NULL_ADDRESS","sub","abi","replaceKind","encodeToBytes","Replaceable","output","dynamicOffset","inputs","reduce","len","type","match","parseInt","kind","value","bitmask","ethABI","elementaryName","undefined","generateDefaultValue","offset","cur","Buffer","encodeSingle","length","fill","isDynamic","push","methodIdMask","mask","concat","join","abis","allowReplaceByte","doNotAllowReplaceByte","maskArr","encodedUint256","dataLocationSize","dynamicArgumentLengthSize","repeat","encoded","replacementBytes","replacement","encodeReplacementPattern","concatenatedReplacementPatterns","x","y","ret","_i","char","byte","buf","alloc","writeUInt8","__decorate","decorators_1","syncWyvernProtocolErrorHandler","exports"],"sourceRoot":"","sources":["../src/wyvernProtocol.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}