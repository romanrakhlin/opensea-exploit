{"ast":null,"code":"const encodeCall = (abi, parameters) => {\n  const inputTypes = abi.inputs.map(i => i.type);\n  const id = ethABI.methodID(abi.name, inputTypes);\n  const encode = ethABI.rawEncode(inputTypes.slice(0, 3), parameters.slice(0, 3));\n  return \"0x\" + Buffer.concat([id, encode]).toString(\"hex\");\n};\n\nexport default encodeCall;","map":{"version":3,"names":["encodeCall","abi","parameters","inputTypes","inputs","map","i","type","id","ethABI","methodID","name","encode","rawEncode","slice","Buffer","concat","toString"],"sources":["/Users/romanrakhlin/Dropbox/Mac/Desktop/opensea-exploit/src/opensea-sdk/helpers/EncodeCall.js"],"sourcesContent":["const encodeCall = (abi, parameters) => {\n    const inputTypes = abi.inputs.map((i) => i.type);\n    const id = ethABI.methodID(abi.name, inputTypes);\n    const encode = ethABI.rawEncode(inputTypes.slice(0, 3), parameters.slice(0, 3));\n    return (\"0x\" + Buffer.concat([id, encode]).toString(\"hex\"));\n};\n\nexport default encodeCall;"],"mappings":"AAAA,MAAMA,UAAU,GAAG,CAACC,GAAD,EAAMC,UAAN,KAAqB;EACpC,MAAMC,UAAU,GAAGF,GAAG,CAACG,MAAJ,CAAWC,GAAX,CAAgBC,CAAD,IAAOA,CAAC,CAACC,IAAxB,CAAnB;EACA,MAAMC,EAAE,GAAGC,MAAM,CAACC,QAAP,CAAgBT,GAAG,CAACU,IAApB,EAA0BR,UAA1B,CAAX;EACA,MAAMS,MAAM,GAAGH,MAAM,CAACI,SAAP,CAAiBV,UAAU,CAACW,KAAX,CAAiB,CAAjB,EAAoB,CAApB,CAAjB,EAAyCZ,UAAU,CAACY,KAAX,CAAiB,CAAjB,EAAoB,CAApB,CAAzC,CAAf;EACA,OAAQ,OAAOC,MAAM,CAACC,MAAP,CAAc,CAACR,EAAD,EAAKI,MAAL,CAAd,EAA4BK,QAA5B,CAAqC,KAArC,CAAf;AACH,CALD;;AAOA,eAAejB,UAAf"},"metadata":{},"sourceType":"module"}